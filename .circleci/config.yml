restore_cache: &restore_cache
  keys:
    - node-modules-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ checksum "package.json" }}
    - node-modules-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package.json" }}

save_cache: &save_cache
  key: node-modules-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ checksum "package.json" }}
  paths:
    - node_modules

docker: &docker
  - image: "node:10"

browser_testing_steps: &browser_testing_steps
  - checkout
  - attach_workspace:
      at: "."
  - run: npm run build
  - run: npm test
  - store_test_results:
      path: reports
  - store_artifacts:
      path: reports

version: 2

jobs:
  install:
    docker: *docker
    environment:
      NPM_CONFIG_LOGLEVEL: warn
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run: npm install
      - save_cache: *save_cache
      - persist_to_workspace:
          root: .
          paths:
            - node_modules

  lint:
    docker: *docker
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - run: npm run lint

  test-MicrosoftEdge-latest:
    docker: *docker
    environment:
      BROWSER: "MicrosoftEdge-latest"
    steps: *browser_testing_steps

  test-internet_explorer-11:
    docker: *docker
    environment:
      BROWSER: "internet_explorer-11"
    steps: *browser_testing_steps

  test-safari-11:
    docker: *docker
    environment:
      BROWSER: "safari-11"
    steps: *browser_testing_steps

  test-chrome-latest:
    docker: *docker
    environment:
      BROWSER: "chrome-latest"
    steps: *browser_testing_steps

  test-firefox-latest:
    docker: *docker
    environment:
      BROWSER: "firefox-latest"
    steps: *browser_testing_steps

  test-firefox-latest-nojs:
    docker: *docker
    environment:
      BROWSER: "firefox-latest-nojs"
    steps: *browser_testing_steps

  ensure-valid-credentials:
    docker: *docker
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - run:
          name: "Check that the Semantic Release credentials are valid"
          command: |
            echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > ./.npmrc
            npm whoami

  release:
    docker: *docker
    environment:
      NODE_ENV: production
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - deploy:
          name: "Semantic Release"
          command: |
            echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > ./.npmrc
            npm run build
            npm run semantic-release

workflows:
  version: 2
  build:
    jobs:
      - install
      - lint:
          requires:
            - install
      - test-MicrosoftEdge-latest:
          context: "browser-testing"
          requires:
            - install
      - test-internet_explorer-11:
          context: "browser-testing"
          requires:
            - install
      - test-safari-11:
          context: "browser-testing"
          requires:
            - install
      - test-chrome-latest:
          context: "browser-testing"
          requires:
            - install
      - test-firefox-latest:
          context: "browser-testing"
          requires:
            - install
      - test-firefox-latest-nojs:
          context: "browser-testing"
          requires:
            - install
      - ensure-valid-credentials:
          context: "semantic-release"
          requires:
            - install
            - lint
            - test-MicrosoftEdge-latest
            - test-internet_explorer-11
            - test-safari-11
            - test-chrome-latest
            - test-firefox-latest
            - test-firefox-latest-nojs
      - release:
          context: "semantic-release"
          filters:
            branches:
              only: master
          requires:
            - install
            - lint
            - test-MicrosoftEdge-latest
            - test-internet_explorer-11
            - test-safari-11
            - test-chrome-latest
            - test-firefox-latest
            - test-firefox-latest-nojs
